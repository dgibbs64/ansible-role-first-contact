---
- name: "Prepare"
  hosts: all
  gather_facts: true

  tasks:
    - name: "Ensure python3-pip is installed on the control node (Debian/Ubuntu)"
      delegate_to: localhost
      ansible.builtin.apt:
        name: python3-pip
        state: present
      when: ansible_distribution in ['Debian', 'Ubuntu']
      changed_when: false

    - name: "Ensure pip is installed on the control node (non-Debian/Ubuntu)"
      delegate_to: localhost
      ansible.builtin.command: python3 -m ensurepip --upgrade
      when: ansible_distribution not in ['Debian', 'Ubuntu']
      changed_when: false

    - name: "Ensure passlib is installed on the control node"
      delegate_to: localhost
      ansible.builtin.pip:
        name: passlib
      changed_when: false

    - name: "Get current user"
      ansible.builtin.command: whoami
      register: current_user
      changed_when: false
      delegate_to: localhost

    - name: "Install SSH (apt)"
      become: true
      ansible.builtin.apt:
        name: "openssh-client,openssh-server"
        state: present
        update_cache: true
      when: ansible_pkg_mgr == "apt"

    - name: "Install SSH (dnf)"
      become: true
      ansible.builtin.dnf:
        name: "openssh-clients,openssh-server"
        state: present
        update_cache: true
      when: ansible_pkg_mgr == "dnf"

    - name: "Install SSH (zypper)"
      become: true
      community.general.zypper:
        name: "openssh"
        state: present
        update_cache: true
      when: ansible_pkg_mgr == "zypper"

    - name: "Create .ssh directory"
      delegate_to: localhost
      ansible.builtin.file:
        path: "${HOME}/.ssh"
        state: directory
        mode: "0700"

    - name: "Create known_hosts"
      delegate_to: localhost
      ansible.builtin.file:
        path: "${HOME}/.ssh/known_hosts"
        state: touch
        mode: "0600"

    - name: "Generate ed25519 key"
      delegate_to: localhost
      community.crypto.openssh_keypair:
        path: "${HOME}/.ssh/id_ed25519"
        type: ed25519
        size: 4096

    - name: "Start sshd service"
      become: true
      ansible.builtin.service:
        name: sshd
        state: started
        enabled: true
      when: not (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('24.04', '>='))

    - name: "Start sshd service"
      become: true
      ansible.builtin.service:
        name: ssh.socket
        state: started
        enabled: true
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('24.04', '>=')

    - name: "Ensure /run/sshd exists"
      become: true
      ansible.builtin.file:
        path: "/run/sshd"
        state: directory
        owner: root
        group: root
        mode: "0755"
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('24.04', '>=')
