---
# First contact is for hosts that require the deploy user setup.
- name: "Test connection for root"
  remote_user: "root"
  ansible.builtin.wait_for_connection:
    timeout: "{{ first_contact_connection_timeout }}"

- name: "Bootstrap"
  remote_user: "root"
  ansible.builtin.import_role:
    name: robertdebock.bootstrap

- name: "Gathering facts"
  remote_user: "root"
  ansible.builtin.setup:
  when: ansible_facts|default({}) == {}

- name: "Core dependencies"
  remote_user: "root"
  ansible.builtin.import_role:
    name: robertdebock.core_dependencies

- name: "Configure ansible deploy user: {{ first_contact_deploy_user }}"
  remote_user: "root"
  block:
    - name: "SSH key check"
      ansible.builtin.include_tasks: ssh_key_check.yml

    - name: "Generate a random password: {{ first_contact_deploy_user }}"
      ansible.builtin.set_fact:
        first_contact_deploy_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"
      when: first_contact_deploy_password is none or (first_contact_deploy_password | default('')) == ''

    - name: "Ensure ansible deploy user exists: {{ first_contact_deploy_user }}"
      ansible.builtin.user:
        name: "{{ first_contact_deploy_user }}"
        create_home: true
        password: "{{ first_contact_deploy_password | password_hash('sha512') }}"
        update_password: "{{ first_contact_deploy_password_update }}"

    - name: "Ensure SSH public key is on host: {{ first_contact_deploy_user }}"
      ansible.posix.authorized_key:
        user: "{{ first_contact_deploy_user }}"
        state: present
        key: "{{ lookup('file', '{{ first_contact_ssh_public_key_file }}') }}"
      when: not ssh_public_key_file_stat.stat.exists

    - name: "Ensure ansible deploy user is added to sudoers: {{ first_contact_deploy_user }}"
      ansible.builtin.lineinfile:
        path: "/etc/sudoers.d/{{ first_contact_deploy_user }}"
        line: "{{ first_contact_deploy_user }} ALL=(ALL) NOPASSWD: ALL"
        state: present
        mode: "0440"
        create: true
        validate: "visudo -cf %s"

    - name: "Ensure sudoers.d is included in sudoers"
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: "#includedir /etc/sudoers.d"
        state: present
        validate: "/usr/sbin/visudo -cf %s"
