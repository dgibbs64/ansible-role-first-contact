---
# Second contact is for hosts that have a deploy user that is already accessable with sudo.
# If python3 is not installed then bootstrap (raw)
- name: "Test python3"
  block:
    - name: "Test python3 is installed"
      ansible.builtin.raw: "python3 --version"
      changed_when: false
  rescue:
    - name: "Set python3_not_installed fact"
      ansible.builtin.set_fact:
        python3_not_installed: true

- name: "Test python"
  when: python3_not_installed is defined
  block:
    - name: "Test python is installed"
      ansible.builtin.raw: "python --version"
      changed_when: false
  rescue:
    - name: "Set python_not_installed fact"
      ansible.builtin.set_fact:
        python_not_installed: true

- name: "Bootstrap"
  when: python3_not_installed is defined and python_not_installed is defined
  block:
    - name: "Bootstrap"
      ansible.builtin.import_role:
        name: robertdebock.bootstrap

    - name: "Core dependencies"
      ansible.builtin.import_role:
        name: robertdebock.core_dependencies

- name: "Gathering facts"
  ansible.builtin.setup:
  when: ansible_facts|default({}) == {}

- name: "Configure ansible deploy user: {{ first_contact_deploy_user }}"
  block:
    - name: "Check local SSH public key for ansible deploy user exists: {{ first_contact_deploy_user }}"
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ first_contact_ssh_public_key_file }}"
      register: ssh_public_key_file_stat
      when: first_contact_ssh_public_key_file is defined

    - name: "Check local SSH private key for ansible deploy user exists: {{ first_contact_deploy_user }}"
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ first_contact_ssh_private_key_file }}"
      register: ssh_private_key_file_stat
      when: first_contact_ssh_private_key_file is defined

    - name: "Check local SSH public key for ansible deploy user exists: {{ first_contact_deploy_user }}"
      ansible.builtin.fail:
        msg: "SSH public key file does not exist: {{ first_contact_ssh_public_key_file }}"
      when: first_contact_ssh_public_key_file is defined and not ssh_public_key_file_stat.stat.exists

    - name: "Check SSH private key for ansible deploy user exists: {{ first_contact_deploy_user }}"
      ansible.builtin.fail:
        msg: "SSH private key file does not exist: {{ first_contact_ssh_private_key_file }}"
      when: first_contact_ssh_private_key_file is defined and not ssh_private_key_file_stat.stat.exists

    - name: "Ensure SSH public key is on host: {{ first_contact_deploy_user }}"
      ansible.posix.authorized_key:
        user: "{{ first_contact_deploy_user }}"
        state: present
        key: "{{ lookup('file', '{{ first_contact_ssh_public_key_file }}') }}"
      register: ssh_key_result
      when: first_contact_ssh_public_key_file is defined

- name: "Bootstrap" # noqa no-handler
  ansible.builtin.import_role:
    name: robertdebock.bootstrap
  when: ssh_key_result is changed

- name: "Core dependencies" # noqa no-handler
  ansible.builtin.import_role:
    name: robertdebock.core_dependencies
  when: ssh_key_result is changed
